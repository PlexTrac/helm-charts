---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 3 }}
  selector:
    matchLabels:
      {{- include "common.labels.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
    spec:
      restartPolicy: Always
      containers:
      - name: {{ include "common.names.name" . }}-init-users
        image: {{ include "common.images.image" (dict "local" .Values.image "global" $) }}
        command:
        - "/bin/bash"
        - "-c"
        args:
        - |
          while true; do
            echo "Connecting to $COUCHBASE:8091 to see if it's initialized"
            bucketReady=`curl -s --head -X GET -u "$CB_ADMIN_USER":"$CB_ADMIN_PASS" -H "Content-Type: application/json" $COUCHBASE:8091/pools/default/buckets/reportMe | head -n 1 | grep -c "200 OK"`
            if [ $bucketReady -eq 1 ]; then break; else sleep 5; fi
          done
          echo "$COUCHBASE:8091 is ready, checking for app user"
          userExists=`curl -s --head -X GET -u $CB_API_USER:$CB_API_PASS -H "Content-Type: application/json" $COUCHBASE:8091/pools/default/buckets/reportMe | head -n 1 | grep -c "200 OK"`
          if [ $userExists -eq 1 ]; then echo "App user exists, nothing to do"; exit 0; fi
          echo "Setting up app user"
          couchbase-cli user-manage --set -c $COUCHBASE:8091 -u $CB_ADMIN_USER -p $CB_ADMIN_PASS --rbac-username $CB_API_USER --rbac-password $CB_API_PASS --rbac-name "PlexTrac API User" --roles bucket_full_access[reportMe] --auth-domain local
          echo "Users initialization complete"
          while true; do
            sleep 600
            echo "Sidecar sleeping..."
          done
        env:
        - name: COUCHBASE
          value: {{ include "common.names.name" . }}
        - name: CB_API_USER
          valueFrom:
            secretKeyRef:
              name: couchbase-secret
              key: username
        - name: CB_API_PASS
          valueFrom:
            secretKeyRef:
              name: couchbase-secret
              key: password
        envFrom:
        - secretRef:
            name: {{ include "common.names.name" . }}-admin-secret

      - name: {{ include "common.names.name" . }}
        image: {{ include "common.images.image" (dict "local" .Values.image "global" $) }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.command }}
        command:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        envFrom:
        - secretRef:
            name: {{ include "common.names.name" . }}-admin-secret
        {{- with .Values.volumes }}
        volumeMounts:
        {{- range $name, $spec := . }}
        - mountPath: {{ $spec.mountPath }}
          name: {{ $name }}
        {{- end }}
        {{- end }}

        ports:
        - name: http
          containerPort: 8091
          protocol: TCP
        - containerPort: 8092
        - containerPort: 8093
        - containerPort: 8094
        - containerPort: 11210

        resources:
          {{- toYaml .Values.resources | nindent 10 }}

        #livenessProbe:
        # httpGet:
        #   path:  /api/v2/health/live
        #   port: 4350
        # initialDelaySeconds: 10
        # timeoutSeconds: 10
        # failureThreshold: 6
        #readinessProbe:
        # httpGet:
        #   path:  /api/v2/health/full
        #   port: 4350
        # initialDelaySeconds: 10
        # timeoutSeconds: 10
        # failureThreshold: 6

      {{- include "common.images.pullSecrets" $ | nindent 6 }}
      
      {{- with .Values.volumes }}
      volumes:
        {{- range $name, $spec := . }}
      - name: {{ $name }}
        persistentVolumeClaim:
          claimName: {{ $.Chart.Name }}-{{ $name }}
      {{- end }}
      {{- end }}

