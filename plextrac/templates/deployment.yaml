apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas | default 1 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 3 }}
  selector:
    matchLabels:
      {{- include "common.labels.selectorLabels" . | nindent 6 }}
  strategy:
    # TODO: update this based on replicas/auto scaling.
    # We should be able to infer some reasonable defaults also for redis, etc
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
    spec:
      containers:
        # TODO: add init container that can bootstrap the DB if necessary (for
        # demo, single node, etc)
      - name: {{ include "common.names.name" . }}
        image: {{ include "common.images.image" (dict "local" .Values.image "global" $) }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.command }}
        command:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        env:
        - name: CB_API_USER
          {{- include "common.secret.fromValueOrSecret" (
                dict
                "key" "couchbaseUser"
                "secret" (default "couchbase-secret" .Values.couchbaseExistingSecret)
                "secretKey" (printf "%s%s" (default "" .Values.couchbaseExistingSecretKeyPrefix) "username")
                "rootContext" . 
          ) | nindent 10 }}
        - name: FOO
          value: "{{ include "common.secret.statefulSecretGenerator" (dict "key" "COUCHBASE_URL" "name" "plextracenvsecrets" "namespace" .Release.Namespace) }}"
        envFrom:
        - secretRef:
            name: {{ include "common.names.name" . }}-secret
        - configMapRef:
            name: {{ include "common.names.name" . }}-configmap
        {{- with .Values.volumes }}
        volumeMounts:
        {{- range $name, $spec := . }}
        - mountPath: {{ $spec.mountPath }}
          name: {{ $name }}
        {{- end }}
        {{- end }}

        ports:
        - name: api
          containerPort: 4350
          protocol: TCP

        resources:
          {{- toYaml .Values.resources | nindent 8 }}

        livenessProbe:
          httpGet:
            path:  /api/v2/health/live
            port: 4350
          initialDelaySeconds: 10
          timeoutSeconds: 10
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path:  /api/v2/health/full
            port: 4350
          initialDelaySeconds: 10
          timeoutSeconds: 10
          failureThreshold: 6

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml . | nindent 8 }}
      {{- end -}}

      
      {{- with .Values.volumes }}
      volumes:
        {{- range $name, $spec := . }}
      - name: {{ $name }}
        persistentVolumeClaim:
          claimName: {{ $.Chart.Name }}-{{ $name }}
      {{- end }}
      {{- end }}

      restartPolicy: Always

